=============================
RapidSMS 0.13.0 release notes
=============================


.. warning::

    RapidSMS v0.13.0 is currently under development and has not been released.

Welcome to RapidSMS 0.13.0! These release notes cover the new features 0.13.0
as well as some `backwards-incompatible-changes`_ you'll want to be aware of
when upgrading from RapidSMS 0.12.0.

What's New
==========

* Added support for sending bulk messages. This involved the following changes:
    * Modified ``MessageBase`` to accept multiple connections.
    * Updated ``send`` to pass multiple connections (within a message object) to the Router. The :doc:`Messaging API </topics/router/messaging>` already supported multiple connections, so the API did not change.
    * Added ``send`` to ``rapidsms.backends.BackendBase`` to raise a ``NotImplementedError`` by default. Child classes must now override this function.
    * Updated ``Backend.send`` to always expect multiple connections and changed the signature to accept ``text`` and ``identities``, rather than a message object.
    * Updated :router:`BlockingRouter` to inspect outbound message connections, group by backend, and call ``backend.send`` for each one.
* Added the database-powered :router:`DatabaseRouter`. The :router:`DatabaseRouter` stores all messages in the database and keeps track of recieved/sent state of each message. This is useful for monitoring the sending of large message volumes.
* Added a backend for :doc:`Vumi </topics/backends/vumi>`.
* Cleaned up admin for ``Connection`` to load faster with database JOINs.
* Added delivery report functionality for Kannel.
* Combined the ``BaseRouter`` and ``BlockingRouter`` together. Now all base routing functionality is handled by :router:`BlockingRouter`.
* In order to better support cusomization of routers, messages now pass through ``receive_incoming`` and ``process_incoming`` methods. This additional layer allows the :router:`CeleryRouter` and :router:`DatabaseRouter` to more easily customize message processing.
* The :doc:`Messaging API </topics/router/messaging>` now asks the router to instantiate incoming and outgoing messages via the ``new_incoming_message`` and ``new_outgoing_message`` methods. This allows the router to better customize the message classes.
* Reworked the :router:`CeleryRouter` to pass identifiers, rather than instantiated objects, to background tasks. This avoids tasks possibly using outdated data when unpickling task arguments.
* Removed ``rapidsms.tests.harness.setting``.


.. _backwards-incompatible-changes:

Backwards-incompatible changes in RapidSMS 0.13.0
=================================================

In the goal of improving the RapidSMS core, we have made a number of backwards-
incompatible changes.

Dropped Django 1.3 support
--------------------------

We decided to drop Django 1.3 support to take advantage of the functionality
offered in Django 1.4+, including `bulk_create`_ and `override_settings`_. Please read the `Django 1.4 release notes`_ for upgrade instructions. We believe the most common changes effecting RapidSMS projects will be:

    * Removal of `django.conf.urls.defaults`_

Make the following change to all of your ``urls.py``:

.. code-block:: diff

    -from django.conf.urls.defaults import *
    +from django.conf.urls import patterns, url

Removed start/stop methods
--------------------------

We removed the left over ``start`` and ``stop`` methods for the router, backends, and apps. These were important for the legacy, threaded router, but are no longer necessary with new-routing. If your apps and backends use these methods, you'll need to move the functionality to ``__init__``.

Removed Message translation functionality
-----------------------------------------

Now that Message objects can contain multiple connections, the internal translation bits needed to change. Messages can be sent to connections that specify different default languages. We removed all translation functionality from the Message objects and require the developer to handle it explicitly.

Add link to updated translation docs...



.. _override settings: https://docs.djangoproject.com/en/1.4/topics/testing/#django.test.utils.override_settings
.. _bulk create: https://docs.djangoproject.com/en/1.4/ref/models/querysets/#bulk-create
.. _Django 1.4 release notes: https://docs.djangoproject.com/en/1.4/releases/1.4/
.. _django.conf.urls.defaults: https://docs.djangoproject.com/en/1.4/releases/1.4/#django-conf-urls-defaults
